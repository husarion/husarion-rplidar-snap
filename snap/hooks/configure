#!/bin/sh -e

# The configure hook is called every time one the following actions happen:
# - initial snap installation
# - snap refresh
# - whenever the user runs snap set|unset to change a configuration option

# Define a function to log and echo messages
log_and_echo() {
    local message="$1"
    # Log the message with logger
    logger -t "${SNAP_NAME}" "configure hook: $message"
    # Echo the message to standard error
    echo >&2 "$message"
}

log() {
    local message="$1"
    # Log the message with logger
    logger -t "${SNAP_NAME}" "configure hook: $message"
}

$SNAP/usr/bin/configure_hook_ros.sh

is_integer() {
  expr "$1" : '-\?[0-9][0-9]*$' >/dev/null 2>&1
}

# Make sure ROS 2 nodes parameters value is a boolean
OPTS="inverted angle-compensate"
for OPT in ${OPTS}; do
  VALUE="$(snapctl get driver.${OPT})"
  if [ -n "${VALUE}" ]; then
    case "${VALUE}" in
    "true") ;;
    "false") ;;
    *)
      log_and_echo "configure hook: '${VALUE}' is not a supported value for ${OPT}." \
        "Possible values are True or False."
      exit 1
      ;;
    esac
  fi
done

# Make sure ROS 2 nodes parameters value is a boolean
OPTS="channel-type"
for OPT in ${OPTS}; do
  VALUE="$(snapctl get driver.${OPT})"
  if [ -n "${VALUE}" ]; then
    case "${VALUE}" in
    "serial") ;;
    "tcp") ;;
    "udp") ;;
    *)
      log_and_echo "configure hook: '${VALUE}' is not a supported value for ${OPT}." \
        "Possible values are serial, tcp, udp."
      exit 1
      ;;
    esac
  fi
done

# Make sure ROS 2 nodes parameters value is a boolean
OPT="serial-baudrate"
VALUE="$(snapctl get driver.${OPT})"
if ! is_integer "${VALUE}" ; then
  log_and_echo "'${VALUE}' is not a supported value for '${OPT}'. Possible values are integers."
  exit 1
fi

# restart services with new ROS 2 config
for service in daemon; do
  if snapctl services ${SNAP_NAME}.${service} | grep -qw active; then
    snapctl restart ${SNAP_NAME}.${service}
    log "Restarted ${SNAP_NAME}.${service}"
  fi
done
